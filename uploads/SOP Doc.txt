
üìÑ Executive Summary
Our current bi-weekly release cadence enables rapid delivery of new features, but few customers have expressed concerns about the resulting change fatigue. These frequent updates require retraining internal teams and updating documentation, leading to operational overhead and dissatisfaction.
To address this, we propose a new Slow Release Channel that customers can opt into. This channel provides a more predictable and manageable update schedule, allowing for better internal planning and adoption.
üîç Problem Statement
Some mid-to-large enterprise customers require advance notice and structured rollouts for changes to business-critical workflows. Without this, internal training, documentation, and compliance processes are repeatedly disrupted.
List of customers who have asked for slow release
üí° Proposed Solution: Slow Release Channel (Opt-In)
Customers can opt into a quarterly release cadence where major feature or workflow changes are bundled into two fixed releases:
Release
Timing
Naming Convention
R1
Mid-Quarter
MJJ-R1-2025
R2
End of Quarter
MJJ-R2-2025
‚úÖ R1 Release: June 15, 2025
	‚Ä¢	Includes features verified in QA up to two weeks before release.
	‚Ä¢	Customer Communication: 4 weeks prior
	‚ó¶	"Before vs Upcoming" changelog
	‚ó¶	Help article updates, videos, emails
	‚Ä¢	Internal Communication: 2 weeks prior to Support, CSM, Sales
	‚Ä¢	Enablement: Post-release webinar
‚úÖ R2 Release: July 31, 2025
	‚Ä¢	Includes remaining features verified in QA up to two weeks before release.
	‚Ä¢	Customer Communication: 4 weeks prior
	‚ó¶	"Before vs Now" format
	‚Ä¢	Internal Communication: 2 weeks prior
	‚Ä¢	Enablement: Post-release webinar
üìö SOP: Determining Slow Release Eligibility
PMs must explicitly state in the PRD whether a feature qualifies for the Slow Release Channel.
Types of Features Requiring Slow Release:(Examples based on historical releases)
	1	Business-Critical CTA Renaming
	‚ó¶	e.g., "Mark for Execution" ‚Üí "Send for Signing"
	‚ó¶	Common CTAs across the platform like "Awaiting Signature" to ‚ÄúSigning‚Äù
	2	UI/UX changes that require users to unlearn old habits and learn new interactions.
	‚ó¶	Relocation of CTAs ‚Äî> Relocation of Assign BU to 3 dot menu in repository
	‚ó¶	Navigation Menu Change
	‚ó¶	Significant theming or visual level change ‚Üí Moving from older to new design system.
	3	Additional Steps in P0 Workflows/Areas
	‚ó¶	New or changed steps in contract creation, approval flows, prepare for sign, etc
	4	API/Integration Breaking Changes
	‚ó¶	Endpoint rename, schema change, auth change
	‚ó¶	Webhook key renames
	‚ó¶	Changes to Slack, Salesforce, Hubspot, etc. integrations
	1	Since Slack Changes requires users to restart the app
	2	Some Salesforce updates require package reinstall in Salesforce
	5	Global Config & Permissions Changes
	‚ó¶	Changes to default roles, permissions and access controls update which may require some backfilling exercise.
	6	Training/Documentation-Heavy Features
	‚ó¶	e.g., Approvals V5, Salesforce Native Integration(Setup is documentation heavy)
	7	Fundamental Feature Behavior Changes which requires major migration effort
	‚ó¶	e.g., Change in Metadata behavior from Contract type to Global Metadata, Moving from Contract type to Workflow, etc.
	8	Major Changes to P0 Workflows/Areas
	‚ó¶	Summary Page layout change
	‚ó¶	Navigation menu change
	‚ó¶	New Editor Experience
	9	Feature development work which are solely initiated by customer/group of customers¬† who are a part of slow-release channel¬†


‚úâÔ∏è Operational Guidelines
	‚Ä¢	Every JIRA ticket which is not a bug must have a slow-release field set to yes or no.
	‚ó¶	Ownership to set this lies on the creator of the ticket.
	‚Ä¢	Tickets missing this label value should not move to Ready for Testing.
	‚Ä¢	For slow release features:
	‚ó¶	Communication to customers must start 4 weeks before release.
	‚ó¶	Help docs, in-app guidance, and changelogs must be ready.
	‚ó¶	Internal enablement ‚Üí 2 weeks before release(CS, Support, Implementation and Sales)
	‚Ä¢	Features that are tagged yes for slow-release will be delivered to all customers(irrespective whether they have opted in for slow or fast release) as part of mid quarter release by default.
üöÄ Engineering Implementation (TBD)
	‚Ä¢	Define how engineering will gate features in the release pipeline.
üë• P0 Workflows/Areas Definition
Workflows/Areas used daily by business users. Examples:
	‚Ä¢	Contract Creation Flow: Template, TPP, Upload & Sign (Web + Integrations)
	‚Ä¢	Repository: Search, filters, reports, views, access updates
	‚Ä¢	Review Flow: Collection of Approvals, Request review, Version Comparison
	‚Ä¢	Summary Page: CP update, add or manage recipients, activity log, metadata, all actions under ‚ÄúMore actions‚Äù section, Key Information Cards and CTAs inside those cards(such as Party Info, Metadata)
	‚Ä¢	Signing Flow: Prepare for signing, sign order, field placement
	‚Ä¢	Navigation Menu ‚Üí Primarily Change in CTAs or repositioning of actions
	‚Ä¢	Access Control
ü§î FAQ
Q: Will opt-in customers still receive bug fixes?‚Ä® Yes. Bug fixes will be shipped independently and can be cherry-picked.
Q: What about urgent Rootly-related fixes? ‚Ä®If the fix qualifies as a slow-release type and cannot be feature flagged, it will follow the slow release process. Otherwise, it may be pushed earlier.
Q: Can a Slow Release-tagged feature be delivered early?
A: Yes‚Äîif it‚Äôs behind a feature flag. However, if the feature isn‚Äôt flaggable (e.g., platform-wide CTA renaming), early rollout is not feasible.

üß™SOP Evaluation using AI
Based on the above SOP ran last year Q3 items through AI and asked it to identify which feature should/should not be part of stable release ‚Üí link


